/*
 * This file is generated by jOOQ.
 */
package io.j13n.core.jooq.tables.records;


import io.j13n.core.enums.FileResourceType;
import io.j13n.core.enums.FileSystemType;
import io.j13n.core.jooq.tables.CoreFileSystem;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CoreFileSystemRecord extends UpdatableRecordImpl<CoreFileSystemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.core_file_system.id</code>.
     */
    public CoreFileSystemRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>core.core_file_system.file_resource_type</code>.
     */
    public CoreFileSystemRecord setFileResourceType(FileResourceType value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.file_resource_type</code>.
     */
    public FileResourceType getFileResourceType() {
        return (FileResourceType) get(1);
    }

    /**
     * Setter for <code>core.core_file_system.code</code>.
     */
    public CoreFileSystemRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>core.core_file_system.name</code>.
     */
    public CoreFileSystemRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>core.core_file_system.file_system_type</code>.
     */
    public CoreFileSystemRecord setFileSystemType(FileSystemType value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.file_system_type</code>.
     */
    public FileSystemType getFileSystemType() {
        return (FileSystemType) get(4);
    }

    /**
     * Setter for <code>core.core_file_system.size</code>.
     */
    public CoreFileSystemRecord setSize(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.size</code>.
     */
    public Long getSize() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>core.core_file_system.parent_id</code>.
     */
    public CoreFileSystemRecord setParentId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>core.core_file_system.user_id</code>.
     */
    public CoreFileSystemRecord setUserId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>core.core_file_system.created_by</code>.
     */
    public CoreFileSystemRecord setCreatedBy(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>core.core_file_system.created_at</code>.
     */
    public CoreFileSystemRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>core.core_file_system.updated_by</code>.
     */
    public CoreFileSystemRecord setUpdatedBy(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>core.core_file_system.updated_at</code>.
     */
    public CoreFileSystemRecord setUpdatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>core.core_file_system.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoreFileSystemRecord
     */
    public CoreFileSystemRecord() {
        super(CoreFileSystem.CORE_FILE_SYSTEM);
    }

    /**
     * Create a detached, initialised CoreFileSystemRecord
     */
    public CoreFileSystemRecord(Long id, FileResourceType fileResourceType, String code, String name, FileSystemType fileSystemType, Long size, Long parentId, Long userId, Long createdBy, LocalDateTime createdAt, Long updatedBy, LocalDateTime updatedAt) {
        super(CoreFileSystem.CORE_FILE_SYSTEM);

        setId(id);
        setFileResourceType(fileResourceType);
        setCode(code);
        setName(name);
        setFileSystemType(fileSystemType);
        setSize(size);
        setParentId(parentId);
        setUserId(userId);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
