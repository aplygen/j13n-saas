DROP TABLE IF EXISTS CORE.CORE_JOBS;

CREATE
    TYPE CORE_JOB_STATUS AS ENUM (
    'IN_SEARCH',
    'DISCARD',
    'SAVED',
    'IN_PROGRESS',
    'APPLIED',
    'INTERVIEWING',
    'NEGOTIATION'
    );

CREATE TABLE CORE.CORE_JOBS
(
    ID              BIGINT          NOT NULL DEFAULT CORE.CORE_NEXT_ID(),
    USER_ID         BIGINT          NOT NULL,
    TITLE           VARCHAR(512)    NOT NULL,
    COMPANY         VARCHAR(256)    NOT NULL DEFAULT 'UNKNOWN',
    LOCATION        VARCHAR(256),
    DESCRIPTION     TEXT,
    APPLICATION_URL VARCHAR(2048),
    SOURCE          VARCHAR(128)    NOT NULL DEFAULT 'UNKNOWN',
    POSTED_DATE     TIMESTAMP,
    IS_REMOTE       BOOLEAN         NOT NULL DEFAULT FALSE,
    STATUS          CORE_JOB_STATUS NOT NULL DEFAULT 'IN_SEARCH',
    CREATED_BY      BIGINT,
    CREATED_AT      TIMESTAMP       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY      BIGINT,
    UPDATED_AT      TIMESTAMP       NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    CONSTRAINT FK_JOB_SEARCH_RESULTS_USER_ID_USERS_ID FOREIGN KEY (USER_ID) REFERENCES CORE.CORE_USERS (ID)
);

CREATE INDEX IDX_JOBS_COMPANY ON CORE.CORE_JOBS (COMPANY);
CREATE INDEX IDX_JOBS_SOURCE ON CORE.CORE_JOBS (SOURCE);
CREATE INDEX IDX_JOBS_DATE ON CORE.CORE_JOBS (POSTED_DATE);
CREATE INDEX IDX_JOBS_STATUS ON CORE.CORE_JOBS (STATUS);

DROP TRIGGER IF EXISTS UPDATE_CORE_JOBS_TIMESTAMP ON CORE.CORE_JOBS;

CREATE TRIGGER UPDATE_CORE_JOBS_TIMESTAMP
    BEFORE UPDATE
    ON CORE.CORE_JOBS
    FOR EACH ROW
EXECUTE FUNCTION CORE.CORE_UPDATE_TIMESTAMP();
